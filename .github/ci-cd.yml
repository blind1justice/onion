name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      IP_ADDRES: ${{ secrets.IP_ADDRES }}

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Copy files to the remote server
      - name: Deploy to Remote Server
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $IP_ADDRES >> ~/.ssh/known_hosts
          rsync -avz --exclude=".github" --exclude=".env" ./ root@$IP_ADDRES:/var/pipeline-app/

      # Step 3: Restart the application
      - name: Restart Application
        run: |
          ssh -i ~/.ssh/id_rsa root@$IP_ADDRES << EOF
            cd /var/pipeline-app/
            docker compose down
            docker compose up -d --build
            docker image prune -f
            docker container prune -f --filter "until=24h"
          EOF

      # Step 4: Apply Alembic migrations
      - name: Apply Migrations
        run: |
          ssh -i ~/.ssh/id_rsa root@$IP_ADDRES << EOF
            cd /var/pipeline-app/
            docker compose exec web alembic upgrade head
          EOF

      # Step 5: Cleanup SSH key
      - name: Cleanup SSH key
        run: |
          rm -f ~/.ssh/id_rsa
          echo "SSH key cleaned up"
        if: always() 
