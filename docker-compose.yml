version: "3.9"

services:
  web:
    build: .
    ports:
      - "8000:8000"
    container_name: practice_app
    env_file: .env
    depends_on:
      - db
      - redis
    networks:
      - app-network
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0

  db:
    image: postgres:16-alpine
    container_name: practice_postgres_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: practice_redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery:
    build: .
    container_name: celery_worker
    env_file: .env
    depends_on:
      - redis
      - db
    networks:
      - app-network
    volumes:
      - .:/app
    working_dir: /app
    command: celery -A src.celery_conf.worker worker --loglevel=info
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge